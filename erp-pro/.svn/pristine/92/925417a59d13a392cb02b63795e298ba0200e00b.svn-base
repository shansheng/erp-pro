<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pt.modules.mds.mdspcmplanprocurement.mapper.MdsPcmPlanProcurementMapper">
    
    <!-- 从视图中获取的字段 -->
	<sql id="mdsProcurementPlanColumns">
		a.id AS "id",
		a.mds_item_id AS "mdsItemId",
		a.classify AS "classify",
		a.item_code AS "itemCode",
		a.item_name AS "itemName",
		a.normal_field AS "normalField",
		a.modelnm AS "modelnm",
		a.specs AS "specs",
		a.purchase_amount AS "purchaseAmount",
		a.required_date AS "requiredDate",
		a.state AS "state",
		a.procurement_way AS "procurementWay",
		a.from_id AS "fromId",
		a.source_type AS "sourceType",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.particulars AS "particulars",
		a.supplier_name AS "supplierName",
		a.buyer AS "buyer.id",
		a.name AS "buyer.name"
	</sql>
	<!-- 从表中获取 -->
	<sql id="mdsProcurementPlanColumns2">
		a.id AS "id",
		a.mds_item_id AS "mdsItemId",
		a.classify AS "classify",
		a.item_code AS "itemCode",
		a.item_name AS "itemName",
		a.normal_field AS "normalField",
		a.modelnm AS "modelnm",
		a.specs AS "specs",
		a.purchase_amount AS "purchaseAmount",
		a.required_date AS "requiredDate",
		a.state AS "state",
		a.procurement_way AS "procurementWay",
		a.from_id AS "fromId",
		a.source_type AS "sourceType",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.supplier_name AS "supplierName",
		a.buyer AS "buyer.id",
		b.name AS "buyer.name"
	</sql>
	<!-- 统计查询 -->
	<sql id="mdsProcurementPlanColumns3">
		a.mds_item_id as "mdsItemId",
		a.item_code as "itemCode",
		a.item_name as "itemName",
		a.normal_field as "normalField",
		a.modelnm,
		a.specs,
		purchaseAmount,
		a.required_date as "requiredDate",
		a.state
	</sql>
	
	
	<sql id="mdsProcurementPlanJoins">
		left join sys_user b on a.buyer=b.id
	</sql>
	
    
	<select id="get" resultType="MdsProcurementPlan" >
		SELECT 
			<include refid="mdsProcurementPlanColumns2"/>
		FROM mds_procurement_plan a
		<include refid="mdsProcurementPlanJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="MdsProcurementPlan" >
		SELECT 
			<include refid="mdsProcurementPlanColumns"/>
		FROM MDS_PROCUREMENT_PLAN_V a
		<include refid="mdsProcurementPlanJoins"/>
		<where>
			${dataScope}
			AND a.state = '20'
			<if test="itemCode != null and itemCode != ''">
				AND a.item_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{itemCode}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{itemCode}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{itemCode},'%')</if>
			</if>
			<if test="itemName != null and itemName != ''">
				AND a.item_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{itemName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{itemName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{itemName},'%')</if>
			</if>
			<if test="beginRequiredDate != null and endRequiredDate != null and beginRequiredDate != '' and endRequiredDate != ''">
				AND a.required_date BETWEEN #{beginRequiredDate} AND #{endRequiredDate}
			</if>
				
			<if test="procurementWay != null and procurementWay != ''">
				AND a.procurement_way = #{procurementWay}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy},a.update_date DESC
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MdsProcurementPlan" >
		SELECT 
			<include refid="mdsProcurementPlanColumns"/>
		FROM MDS_PROCUREMENT_PLAN_V a
		<include refid="mdsProcurementPlanJoins"/>
		<where>
			${dataScope}
			<if test="itemCode != null and itemCode != ''">
				AND a.item_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{itemCode}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{itemCode}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{itemCode},'%')</if>
			</if>
			<if test="itemName != null and itemName != ''">
				AND a.item_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{itemName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{itemName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{itemName},'%')</if>
			</if>
			<if test="beginRequiredDate != null and endRequiredDate != null and beginRequiredDate != '' and endRequiredDate != ''">
				AND a.required_date BETWEEN #{beginRequiredDate} AND #{endRequiredDate}
			</if>
			<if test="state != null and state != ''">
				AND a.state = #{state}
			</if>
			<if test="procurementWay != null and procurementWay != ''">
				AND a.procurement_way = #{procurementWay}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findCollect" resultType="MdsProcurementPlan" >
		select
			<include refid="mdsProcurementPlanColumns3"/>
		FROM
			(
				SELECT 
					A .mds_item_id,
					A .item_code,
					A .item_name,
					A .normal_field,
					A .modelnm,
					A .specs,
					SUM (A .purchase_amount)  as purchaseAmount,
					A .required_date,
					A .state
				FROM (
					Select 
						A .mds_item_id ,
						A .item_code,
						A .item_name,
						A .normal_field,
						A .modelnm,
						A .specs,
						A .purchase_amount,
						A .required_date,
						A .state,
						A .procurement_way
					FROM MDS_PROCUREMENT_PLAN_V a
					<where>
						 a.state = '20'
						<if test="pcmItemCode != null and pcmItemCode != ''">
							AND a.item_code LIKE 
								<if test="dbName == 'oracle'">'%'||#{pcmItemCode}||'%'</if>
								<if test="dbName == 'mssql'">'%'+#{pcmItemCode}+'%'</if>
								<if test="dbName == 'mysql'">concat('%',#{pcmItemCode},'%')</if>
						</if>
						<if test="pcmItemName != null and pcmItemName != ''">
							AND a.item_name LIKE 
								<if test="dbName == 'oracle'">'%'||#{pcmItemName}||'%'</if>
								<if test="dbName == 'mssql'">'%'+#{pcmItemName}+'%'</if>
								<if test="dbName == 'mysql'">concat('%',#{pcmItemName},'%')</if>
						</if>
						<if test="pcmBeginRequiredDate != null and pcmEndRequiredDate != null and pcmBeginRequiredDate != '' and pcmEndRequiredDate != ''">
							AND a.required_date BETWEEN #{pcmBeginRequiredDate} AND #{pcmEndRequiredDate}
						</if>
						<if test="pcmProcurementWay != null and pcmProcurementWay != ''">
						AND a.procurement_way = #{pcmProcurementWay}
					</if>
					</where>
				) a
				GROUP BY
					A .mds_item_id,
					A .item_code,
					A .item_name,
					A .normal_field,
					A .modelnm,
					A .specs,
					A .required_date,
					A .state
			) a
			<where>
			<if test="itemCode != null and itemCode != ''">
				AND a.item_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{itemCode}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{itemCode}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{itemCode},'%')</if>
			</if>
			<if test="itemName != null and itemName != ''">
				AND a.item_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{itemName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{itemName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{itemName},'%')</if>
			</if>
			<if test="beginRequiredDate != null and endRequiredDate != null and beginRequiredDate != '' and endRequiredDate != ''">
				AND a.required_date BETWEEN #{beginRequiredDate} AND #{endRequiredDate}
			</if>
			</where>
			ORDER BY a.item_code DESC,a.required_date DESC
		
	</select>
	
	<!-- 修改采购计划状态 -->
	<update id="updateState">
		UPDATE mds_procurement_plan SET 
			state = #{state},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			finish_state = #{finishState}
		WHERE id = #{id}
	</update>
	
	<!-- 修改数量和时间 -->
	<update id="update">
		UPDATE mds_procurement_plan SET 
			purchase_amount = #{purchaseAmount},
			required_date = #{requiredDate},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="MdsProcurementPlan" statementType="STATEMENT">
		select * FROM mds_procurement_plan  where ${propertyName} = '${value}'
	</select>
</mapper>